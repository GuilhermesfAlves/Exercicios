Considere o seguinte exemplo,

WRITE(17, FMT= '(I4)', IOSTAT= ISTAT, ERR= 10) IVAL

aqui, '(I4)' descreve format de dado inteiro com 4 dígitos, ISTAT é uma variável inteira que indica o status do processo de escrita; em caso de erro, o fluxo é transferido ao rótulo 10. IVAL é a variavel cujo valor é escrito na unidade 17. Outro exemplo seria:

WRITE(*,'(A)', ADVANCE= 'NO') 'Entrada: '

Como a especicação de escrita sem avanço foi escolhida, o cursor ira permanecer na mesma linha que a string 'Entrada: '. Em circunstâncias normais, o cursor passaria ao inicio da linha seguinte na tela.
Nota-se também o descritor de formato de constante de caracteres explícito.


1. O programa a seguir abre um novo arquivo sequencial chamado notas.dat. O programa entao le o nome de um estudante, seguido por 3 notas, as quais são introduzidas pelo teclado (entrada padrão), escrevendo, finalmente, as notas e a média final em NOTAS.DAT e no monitor (saida padrão), na mesma linha do nome. O processo de leitura e escrita é repetido até que um estudante com o nome 'Fim' é introduzido.

PROGRAM Notas
IMPLICIT NONE
CHARACTER(LEN=20) : : name
REAL : : mark1 , mark2 , mark3
OPEN (UNIT=4,FILE='NOTAS.DAT' )
DO
READ( * , * ) name, mark1 , mark2 , mark3
IF(name == 'Fim' )EXIT
WRITE(UNIT=4,FMT=*) name,mark1,mark2,mark3, (mark1 + mark2 + mark3)/3.0
WRITE(UNIT=*,FMT=*) name,mark1,mark2,mark3, (mark1 + mark2 + mark3)/3.0
END DO
CLOSE(UNIT=4)
END PROGRAM Notas


2. Verifique o que faz o programa abaixo e como ele trata o arquivo.

PROGRAM divisores
C Este programa acha os divisores de uma valor inteiro informado.
C O divisor é salvo em um arquivo.
INTEGER n, k, d(10)
OPEN (UNIT = 1, FILE = "div.txt")
PRINT *, "Informe um valor inteiro positivo :"
READ *, n
WRITE (1,*) "Divisores de ", N, " :"
k = 0
DO i = 1, n
IF (MOD(n,i) .EQ. 0) THEN
k = k + 1
d(k) = i
END IF
IF (k .EQ. 10) THEN
WRITE (1,5) (d(j), j = 1, 10)
k = 0
END IF
END DO
WRITE (1,5) (d(j), j = 1, k)
5 FORMAT (10I7)
CLOSE (1)
PRINT *, "Os divisores estão salvos no arquivo 'div.txt' "
END

Arquivo div.txt
Divisores de 100000 :
1 2 4 5 8 10 16 20 25 32
40 50 80 100 125 160 200 250 400 500
625 800 1000 1250 2000 2500 3125 4000 5000 6250
10000 12500 20000 25000 50000 100000


Outros exemplos:
WRITE(17,FMT=‘(I4)’,IOSTAT=stat, ERR=10) val
WRITE(*, ‘(A)’, ADVANCE=‘NO’) ‘Amarelo’


3. Tente analisar o que as subrotinas abaixo fazem. Use-as, chamando-as de um programa principal.


C-----------------------------------------------------------------------
      subroutine lermat( nomearq, m, lin, col )
C Lê matriz de um arquivo: Cada elemento ocupa uma linha
      implicit none
      character *(*) nomearq
      integer lin, col
      real m(lin,col)
C
      integer i, j, u
      parameter (u=99)

      open( unit=u, file=nomearq, status='old' )
      write( 0, "(1x,A,I2,A,I2,A,A,A)" )
     +      'Lendo matriz', lin,'x', col, ' do arquivo ''',nomearq,''''
      do i=1, lin
        do j=1, col
          read( u, * ) m(i,j)
C            write( 0, "(1x,A,I2,A,I2,A,F8.2)" )
C     +                        'F[', i, ',', j, ']=', m(i,j)
        end do
      end do
          close( unit=u )
      return
      end

C-----------------------------------------------------------------------
      subroutine escrevermat( nomearq, m, lin, col )
C Escreve matriz para um arquivo: Cada elemento ocupa uma linha
      implicit none
      character *(*) nomearq
      integer lin, col
      real m(lin,col)
C
      integer i, j, u
      parameter (u=99)

      open( unit=u, file=nomearq, status='replace' )
      write( 0, "(1x,A,I2,A,I2,A,A,A)" )
     +      'Escrevendo matriz', lin,'x', col,
     +      ' para o arquivo ''',nomearq,''''
      do i=1, lin
        do j=1, col
          write( u, * ) m(i,j)
        end do
      end do
          close( unit=u )
      return
      end

C-----------------------------------------------------------------------


4. Faça um programa que leia um vetor a partir de um arquivo e imprima um relatório na tela e em outro arquivo de acordo com o formato abaixo:

Posição valor

(2 colunas)

Altere o formato para escrever o vetor e a posição em linhas dentro do arquivo.